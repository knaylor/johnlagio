{"version":3,"sources":["images/johnlagio.jpeg","images/decorations_01.jpeg","images/management.jpeg","images/pool_01.jpeg","images/hammock.jpeg","images/firepit-dusk.jpeg","images/garden.jpeg","images/grill.jpeg","images/food_01.jpeg","components/banner.tsx","components/navigation.tsx","components/horizontalCard.tsx","components/home.tsx","components/management.tsx","components/stackedCard.tsx","components/amenities.tsx","components/food.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Banner","props","className","src","logo","width","height","alt","selected","notSelected","Navigation","page","updatePage","href","onClick","HorizontalCard","detailText","image","text","title","style","backgroundImage","Home","home01","Management","mgmt","StackedCard","Ammenities","pool01","hammock","firepit","Food","garden","grill","corn","App","useState","setPage","view","setView","useEffect","newPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,qKCY5BC,EARA,SAACC,GACd,OACE,yBAAKC,UAAU,yEACb,yBAAKC,IAAKC,IAAMC,MAAM,MAAMC,OAAO,MAAMC,IAAI,sBCH7CC,EACJ,mHACIC,EACJ,iHA8CaC,EA5CI,SAACT,GAAgB,IAC1BU,EAAqBV,EAArBU,KAAMC,EAAeX,EAAfW,WACd,OACE,wBAAIV,UAAU,yCACZ,wBAAIA,UAAU,QACZ,uBACEA,UAAoB,SAATS,EAAkBH,EAAWC,EACxCI,KAAK,IACLC,QAAS,kBAAMF,EAAW,UAH5B,SAQF,wBAAIV,UAAU,QACZ,uBACEA,UAAoB,cAATS,EAAuBH,EAAWC,EAC7CI,KAAK,IACLC,QAAS,kBAAMF,EAAW,eAH5B,cAQF,wBAAIV,UAAU,QACZ,uBACEA,UAAoB,SAATS,EAAkBH,EAAWC,EACxCI,KAAK,IACLC,QAAS,kBAAMF,EAAW,UAH5B,SAQF,wBAAIV,UAAU,QACZ,uBACEA,UAAoB,eAATS,EAAwBH,EAAWC,EAC9CI,KAAK,IACLC,QAAS,kBAAMF,EAAW,gBAH5B,iB,gBClBOG,EApBQ,SAACd,GAAgB,IAC9Be,EAAmCf,EAAnCe,WAAYC,EAAuBhB,EAAvBgB,MAAOC,EAAgBjB,EAAhBiB,KAAMC,EAAUlB,EAAVkB,MACjC,OACE,yBAAKjB,UAAU,4DACb,yBACEA,UAAU,iHACVkB,MAAO,CAAEC,gBAAgB,OAAD,OAASJ,EAAT,MACxBE,MAAM,eAER,yBAAKjB,UAAU,8LACb,yBAAKA,UAAU,QACb,uBAAGA,UAAU,2CAA4CiB,GACzD,yBAAKjB,UAAU,wCAAyCgB,GACxD,uBAAGhB,UAAU,2BAA4Bc,OCCpCM,EAXF,WACX,OACE,kBAAC,EAAD,CACEN,WAAW,oNACXC,MAAOM,IACPL,KAAK,wBACLC,MAAM,U,gBCKGK,EAXI,WACjB,OACE,kBAAC,EAAD,CACER,WAAW,qKACXC,MAASQ,IACTP,KAAK,0CACLC,MAAM,gB,iDCMGO,EAhBK,SAACzB,GAAgB,IAC3Be,EAAmCf,EAAnCe,WAAYC,EAAuBhB,EAAvBgB,MAAOC,EAAgBjB,EAAhBiB,KAAMC,EAAUlB,EAAVkB,MACjC,OACE,yBAAKjB,UAAU,mDACb,yBAAKA,UAAU,gBAAgBC,IAAKc,EAAOV,IAAKY,IAChD,yBAAKjB,UAAU,aACb,yBAAKA,UAAU,0BAA0BiB,GACzC,uBAAGjB,UAAU,2BAA2BgB,IAE1C,yBAAKhB,UAAU,aACb,0BAAMA,UAAU,4FAAhB,WAAgHc,OCqBzGW,EAzBI,WACjB,OACE,yBAAKzB,UAAU,wGACb,kBAAC,EAAD,CACEc,WAAW,YACXC,MAAOW,IACPV,KAAK,sCACLC,MAAM,SAER,kBAAC,EAAD,CACEH,WAAW,aACXC,MAAOY,IACPX,KAAK,gCACLC,MAAM,YAER,kBAAC,EAAD,CACEH,WAAW,aACXC,MAAOa,IACPZ,KAAK,+CACLC,MAAM,c,mDCMCY,EAzBF,WACX,OACE,yBAAK7B,UAAU,wGACb,kBAAC,EAAD,CACEc,WAAW,WACXC,MAAOe,IACPd,KAAK,iDACLC,MAAM,WAER,kBAAC,EAAD,CACEH,WAAW,cACXC,MAAOgB,IACPf,KAAK,2EACLC,MAAM,UAER,kBAAC,EAAD,CACEH,WAAW,cACXC,MAAOiB,IACPhB,KAAK,mCACLC,MAAM,WCoBCgB,MArCf,WAAgB,IAAD,EACWC,mBAAS,QADpB,mBACNzB,EADM,KACA0B,EADA,OAMWD,mBAAS,kBAAC,EAAD,OANpB,mBAMNE,EANM,KAMAC,EANA,KA0Bb,OAnBAC,qBAAU,WACR,OAAO7B,GACL,IAAK,YACH4B,EAAQ,kBAAC,EAAD,OACR,MACF,IAAK,OACHA,EAAQ,kBAAC,EAAD,OACR,MACF,IAAK,aACHA,EAAQ,kBAAC,EAAD,OACR,MACF,IAAK,OACHA,EAAQ,kBAAC,EAAD,OACR,MACF,QACEA,EAAQ,kBAAC,EAAD,UAEX,CAAC5B,IAGF,yBAAKT,UAAU,mCACb,kBAAC,EAAD,CAAQA,UAAU,KAClB,kBAAC,EAAD,CAAYS,KAAMA,EAAMC,WA3BT,SAAC6B,GAClBJ,EAAQI,MA2BN,yBAAKvC,UAAU,qEACZoC,KC7BWI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.160cb7de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/johnlagio.52c1ce14.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/decorations_01.57628f43.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/management.52bb5c1e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/pool_01.bb92d4a5.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/hammock.bf321bc7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/firepit-dusk.539ee7b8.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/garden.7e7fe7a2.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/grill.2f1f9868.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/food_01.651a0eea.jpeg\";","import React from \"react\";\nimport \"../styles/johnllagio-tailwind.css\";\nimport logo from '../images/johnlagio.jpeg';\n\nconst Banner = (props: any) => {\n  return (\n    <div className=\"flex flex-col items-center justify-center h-1 Banner my-4 pt-24 mb-12\">\n      <img src={logo} width=\"300\" height=\"190\" alt=\"Johnllagio logo\" />\n    </div>\n  );\n};\n\nexport default Banner;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport \"../styles/johnllagio-tailwind.css\";\n\nconst selected =\n  \"inline-block border border-bellagio-green rounded py-2 px-4 bg-bellagio-green hover:bg-bellagio-green text-white\";\nconst notSelected =\n  \"inline-block border border-white rounded hover:border-gray-200 text-bellagio-green hover:bg-gray-200 py-2 px-4\";\n\nconst Navigation = (props: any) => {\n  const { page, updatePage } = props;\n  return (\n    <ul className=\"flex justify-between p-3 my-6 mx-auto\">\n      <li className=\"mr-3\">\n        <a\n          className={page === \"home\" ? selected : notSelected}\n          href=\"#\"\n          onClick={() => updatePage(\"home\")}\n        >\n          Home\n        </a>\n      </li>\n      <li className=\"mr-3\">\n        <a\n          className={page === \"amenities\" ? selected : notSelected}\n          href=\"#\"\n          onClick={() => updatePage(\"amenities\")}\n        >\n          Amenities\n        </a>\n      </li>\n      <li className=\"mr-3\">\n        <a\n          className={page === \"food\" ? selected : notSelected}\n          href=\"#\"\n          onClick={() => updatePage(\"food\")}\n        >\n          Food\n        </a>\n      </li>\n      <li className=\"mr-3\">\n        <a\n          className={page === \"management\" ? selected : notSelected}\n          href=\"#\"\n          onClick={() => updatePage(\"management\")}\n        >\n          Management\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport \"../styles/johnllagio-tailwind.css\";\n\nconst HorizontalCard = (props: any) => {\n  const { detailText, image, text, title } = props;\n  return (\n    <div className=\"max-w-sm w-full lg:max-w-full lg:flex m-3 justify-center\">\n      <div\n        className=\"h-48 lg:h-auto lg:w-48 flex-none bg-cover rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden\"\n        style={{ backgroundImage: `url(${image})` }}\n        title=\"Management\"\n      ></div>\n      <div className=\"border-r border-b border-l border-gray-400 lg:border-l-0 lg:border-t lg:border-gray-400 bg-white rounded-b lg:rounded-b-none lg:rounded-r p-4 flex flex-col justify-between leading-normal\">\n        <div className=\"mb-8\">\n          <p className=\"text-sm text-gray-600 flex items-center\">{ title }</p>\n          <div className=\"text-gray-900 font-bold text-xl mb-2\">{ text }</div>\n          <p className=\"text-gray-700 text-base\">{ detailText }</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HorizontalCard;\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React from \"react\";\nimport \"../styles/johnllagio-tailwind.css\";\nimport home01 from \"../images/decorations_01.jpeg\";\nimport HorizontalCard from \"./horizontalCard\";\n\nconst Home = () => {\n  return (\n    <HorizontalCard\n      detailText=\"We know you'll love your time here.  From splashing and sunning in the world class pool, to finding relief from the sun under the numerous umbrellas, you'll love wasting away your COVID-19 Summer of 2020 here.\"\n      image={home01}\n      text=\"Welcome to Johnlagio!\"\n      title=\"Home\"\n    />\n  );\n};\n\nexport default Home;\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React from \"react\";\nimport \"../styles/johnllagio-tailwind.css\";\nimport mgmt from \"../images/management.jpeg\";\nimport HorizontalCard from \"./horizontalCard\";\n\nconst Management = () => {\n  return (\n    <HorizontalCard\n      detailText=\"This guy! He's not only the proprieter, owner and 'Hostess with the Mostess', but he's a part time chef, firestarter, gardner, bartender and all around great guy.\"\n      image = {mgmt}\n      text=\"Who is the mastermind behind Johnlagio?\"\n      title=\"Management\"\n    />\n  )\n};\n\nexport default Management;\n","import React from 'react';\n\nconst StackedCard = (props: any) => {\n  const { detailText, image, text, title } = props;\n  return (\n    <div className=\"max-w-sm rounded overflow-hidden shadow-lg mb-4\">\n      <img className=\"w-full h-auto\" src={image} alt={title} />\n      <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-xl mb-2\">{title}</div>\n        <p className=\"text-gray-700 text-base\">{text}</p>\n      </div>\n      <div className=\"px-6 py-4\">\n        <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">{`#${detailText}`}</span>\n      </div>\n    </div>\n  );\n} \n\nexport default StackedCard;","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React from \"react\";\nimport \"../styles/johnllagio-tailwind.css\";\nimport pool01 from \"../images/pool_01.jpeg\";\nimport hammock from '../images/hammock.jpeg';\nimport firepit from '../images/firepit-dusk.jpeg';\nimport StackedCard from \"./stackedCard\";\n\nconst Ammenities = () => {\n  return (\n    <div className=\"flex flex-col pb-8 lg:flex-row lg:justify-between lg:w-full xl:flex-row xl:justify-between xl:w-full\">\n      <StackedCard\n        detailText=\"chilltime\"\n        image={pool01}\n        text=\"Beat the heat at the Johnlagio pool\"\n        title=\"Pool\"\n      />\n      <StackedCard\n        detailText=\"loungetime\"\n        image={hammock}\n        text=\"Relax in style on the hammock\"\n        title=\"Hammock\"\n      />\n      <StackedCard\n        detailText=\"smorestime\"\n        image={firepit}\n        text=\"Share stories (or drinks) around the firepit\"\n        title=\"Firepit\"\n      />\n    </div>\n  );\n};\n\nexport default Ammenities;\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React from \"react\"\nimport \"../styles/johnllagio-tailwind.css\"\nimport garden from \"../images/garden.jpeg\"\nimport grill from \"../images/grill.jpeg\"\nimport corn from \"../images/food_01.jpeg\"\nimport StackedCard from \"./stackedCard\"\n\nconst Food = () => {\n  return (\n    <div className=\"flex flex-col pb-8 lg:flex-row lg:justify-between lg:w-full xl:flex-row xl:justify-between xl:w-full\">\n      <StackedCard\n        detailText=\"freshveg\"\n        image={garden}\n        text=\"Enjoy fresh vegetables from Johnlagio's garden\"\n        title=\"Garden\"\n      />\n      <StackedCard\n        detailText=\"grillnchill\"\n        image={grill}\n        text=\"At Johnlagio, you can eat whatever you want! Just bring it and grill it.\"\n        title=\"Grill\"\n      />\n      <StackedCard\n        detailText=\"summerfresh\"\n        image={corn}\n        text=\"One time we had fresh sweet corn\"\n        title=\"Corn\"\n      />\n    </div>\n  );\n};\n\nexport default Food;\n","import React, { useEffect, useState } from \"react\";\nimport \"./styles/johnllagio-tailwind.css\";\nimport Banner from \"./components/banner\"\nimport Navigation from \"./components/navigation\";\nimport Home from \"./components/home\";\nimport Management from \"./components/management\";\nimport Ammenities from './components/amenities';\nimport Food from './components/food';\n\n\nfunction App() {\n  const [page, setPage] = useState(\"home\");\n  const updatePage = (newPage: string): void => {\n    setPage(newPage);\n  };\n\n  const [view, setView] = useState(<Home />)\n  useEffect(() => {\n    switch(page) {\n      case \"amenities\":\n        setView(<Ammenities/>)\n        break;\n      case \"home\":\n        setView(<Home/>)\n        break;\n      case \"management\":\n        setView(<Management/>)\n        break;\n      case \"food\":\n        setView(<Food/>)\n        break;\n      default:\n        setView(<Home/>)\n    }\n  }, [page])\n\n  return (\n    <div className=\"container mx-auto flex flex-col\">\n      <Banner className=\"\" />\n      <Navigation page={page} updatePage={updatePage} />\n      <div className=\"container flex justify-center lg:justify-around xl:justify-around\">\n        {view}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}